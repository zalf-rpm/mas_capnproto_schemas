// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: fbp.capnp

#include "fbp.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<72> b_af0a1dc4709a5ccf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    207,  92, 154, 112, 196,  29,  10, 175,
     10,   0,   0,   0,   1,   0,   1,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   0,   0,   0,
     25,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  80,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
      9,   0,   0,   0,  26,   0,   0,   0,
     78,  72, 220, 155, 226, 202, 132, 246,
      5,   0,   0,   0,  42,   0,   0,   0,
     75,  86,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
     97, 116, 116, 114, 105,  98, 117, 116,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     78,  72, 220, 155, 226, 202, 132, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af0a1dc4709a5ccf = b_af0a1dc4709a5ccf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_af0a1dc4709a5ccf[] = {
  &s_9e9e5391e0c499e6,
  &s_f684cae29bdc484e,
};
static const uint16_t m_af0a1dc4709a5ccf[] = {0, 1, 2};
static const uint16_t i_af0a1dc4709a5ccf[] = {0, 1, 2};
const ::capnp::_::RawSchema s_af0a1dc4709a5ccf = {
  0xaf0a1dc4709a5ccf, b_af0a1dc4709a5ccf.words, 72, d_af0a1dc4709a5ccf, m_af0a1dc4709a5ccf,
  2, 3, i_af0a1dc4709a5ccf, nullptr, nullptr, { &s_af0a1dc4709a5ccf, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<61> b_9e9e5391e0c499e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
     13,   0,   0,   0,   1,   0,   0,   0,
    207,  92, 154, 112, 196,  29,  10, 175,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  80,  46,  75,  86,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e9e5391e0c499e6 = b_9e9e5391e0c499e6.words;
#if !CAPNP_LITE
static const uint16_t m_9e9e5391e0c499e6[] = {1, 0, 2};
static const uint16_t i_9e9e5391e0c499e6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9e9e5391e0c499e6 = {
  0x9e9e5391e0c499e6, b_9e9e5391e0c499e6.words, 61, nullptr, m_9e9e5391e0c499e6,
  0, 3, i_9e9e5391e0c499e6, nullptr, nullptr, { &s_9e9e5391e0c499e6, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f684cae29bdc484e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     78,  72, 220, 155, 226, 202, 132, 246,
     13,   0,   0,   0,   2,   0,   0,   0,
    207,  92, 154, 112, 196,  29,  10, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  80,  46,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 110, 100,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 101, 110,  66, 114,  97,  99,
    107, 101, 116,   0,   0,   0,   0,   0,
     99, 108, 111, 115, 101,  66, 114,  97,
     99, 107, 101, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f684cae29bdc484e = b_f684cae29bdc484e.words;
#if !CAPNP_LITE
static const uint16_t m_f684cae29bdc484e[] = {2, 1, 0};
const ::capnp::_::RawSchema s_f684cae29bdc484e = {
  0xf684cae29bdc484e, b_f684cae29bdc484e.words, 32, nullptr, m_f684cae29bdc484e,
  0, 3, nullptr, nullptr, nullptr, { &s_f684cae29bdc484e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_f684cae29bdc484e, f684cae29bdc484e);
static const ::capnp::_::AlignedData<31> b_f3705fb36d44a21f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     31, 162,  68, 109, 179,  95, 112, 243,
     10,   0,   0,   0,   1,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  73,  80,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f3705fb36d44a21f = b_f3705fb36d44a21f.words;
#if !CAPNP_LITE
static const uint16_t m_f3705fb36d44a21f[] = {0};
static const uint16_t i_f3705fb36d44a21f[] = {0};
const ::capnp::_::RawSchema s_f3705fb36d44a21f = {
  0xf3705fb36d44a21f, b_f3705fb36d44a21f.words, 31, nullptr, m_f3705fb36d44a21f,
  0, 1, i_f3705fb36d44a21f, nullptr, nullptr, { &s_f3705fb36d44a21f, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<166> b_9c62c32b2ff2b1e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
     10,   0,   0,   0,   3,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,  87,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 135,   1,   0,   0,
     77,   2,   0,   0,  39,   0,   0,   0,
     93,   2,   0,   0,  15,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   1,   0,   1,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
     33,   0,   0,   0, 122,   0,   0,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     33,   0,   0,   0,  34,   0,   0,   0,
     40,  80,  23, 127,  35, 163, 215, 227,
     29,   0,   0,   0,  98,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
     29,   0,   0,   0,  58,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
     25,   0,   0,   0,  58,   0,   0,   0,
     67, 108, 111, 115, 101,  83, 101, 109,
     97, 110, 116, 105,  99, 115,   0,   0,
     77, 115, 103,   0,   0,   0,   0,   0,
     83, 116,  97, 114, 116, 117, 112,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     82, 101,  97, 100, 101, 114,   0,   0,
     87, 114, 105, 116, 101, 114,   0,   0,
     24,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     51,  19, 118, 122,  59,  30,  16, 146,
     35,  44, 113, 224, 213,   8, 106, 254,
    177,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   0,   0,   1,   0,
    192,   0,   0,   0,   0,   0,   1,   0,
    209,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    196,   4, 218, 100, 221, 201,   7, 230,
    166, 236, 201, 204, 201, 255,  53, 177,
    197,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   0,   0,   1,   0,
    208,   0,   0,   0,   0,   0,   1,   0,
    225,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      9, 225, 104, 227,  52,  29,  97, 190,
    126,  92, 152, 158, 103,  83, 123, 180,
    213,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   0,   0,   1,   0,
    224,   0,   0,   0,   0,   0,   1,   0,
    241,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    216, 115,  67, 145, 126, 129,  63, 210,
    187, 151, 141,  31, 210,   1, 116, 243,
    229,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   0,   0,   1,   0,
    244,   0,   0,   0,   0,   0,   1,   0,
      5,   1,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    221,  58,  88,  69, 181,  54, 152, 180,
      6,  50, 203,  63,  90, 110, 252, 192,
    249,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   0,   0,   1,   0,
     12,   1,   0,   0,   0,   0,   1,   0,
     29,   1,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    156,  61,  17, 193,   1, 173, 216, 149,
    183,  99,  19,  15, 214, 154,   7, 204,
     17,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   0,   0,   1,   0,
     28,   1,   0,   0,   0,   0,   1,   0,
     45,   1,   0,   0,   7,   0,   0,   0,
    115, 101, 116,  66, 117, 102, 102, 101,
    114,  83, 105, 122, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101,  97, 100, 101, 114,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    119, 114, 105, 116, 101, 114,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    101, 110, 100, 112, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 101, 116,  65, 117, 116, 111,  67,
    108, 111, 115, 101,  83, 101, 109,  97,
    110, 116, 105,  99, 115,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 203,  54, 220, 160, 218, 167, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     86,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c62c32b2ff2b1e8 = b_9c62c32b2ff2b1e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c62c32b2ff2b1e8[] = {
  &s_92101e3b7a761333,
  &s_95d8ad01c1113d9c,
  &s_b135ffc9ccc9eca6,
  &s_b2afd1cb599c48d5,
  &s_b47b53679e985c7e,
  &s_b49836b545583add,
  &s_be611d34e368e109,
  &s_c0fc6e5a3fcb3206,
  &s_c1a7daa0dc36cb65,
  &s_cc079ad60f1363b7,
  &s_d23f817e914373d8,
  &s_e607c9dd64da04c4,
  &s_f37401d21f8d97bb,
  &s_fe6a08d5e0712c23,
};
static const uint16_t m_9c62c32b2ff2b1e8[] = {5, 3, 1, 4, 0, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_9c62c32b2ff2b1e8[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetBufferSizeParams::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ReaderParams::_capnpPrivate::brand() },
  { 33554434,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::WriterParams::_capnpPrivate::brand() },
  { 33554435,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::EndpointsParams::_capnpPrivate::brand() },
  { 33554436,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetAutoCloseSemanticsParams::_capnpPrivate::brand() },
  { 33554437,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::CloseParams::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetBufferSizeResults::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ReaderResults::_capnpPrivate::brand() },
  { 50331650,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::WriterResults::_capnpPrivate::brand() },
  { 50331651,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::EndpointsResults::_capnpPrivate::brand() },
  { 50331652,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetAutoCloseSemanticsResults::_capnpPrivate::brand() },
  { 50331653,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::CloseResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_9c62c32b2ff2b1e8 = {
  0x9c62c32b2ff2b1e8, b_9c62c32b2ff2b1e8.words, 166, d_9c62c32b2ff2b1e8, m_9c62c32b2ff2b1e8,
  14, 6, nullptr, nullptr, nullptr, { &s_9c62c32b2ff2b1e8, nullptr, bd_9c62c32b2ff2b1e8, 0, sizeof(bd_9c62c32b2ff2b1e8) / sizeof(bd_9c62c32b2ff2b1e8[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_a8d787cae7e0b243 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
     18,   0,   0,   0,   2,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  67, 108, 111, 115, 101,  83,
    101, 109,  97, 110, 116, 105,  99, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,   0,   0,   0,   0,   0,
    110, 111,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8d787cae7e0b243 = b_a8d787cae7e0b243.words;
#if !CAPNP_LITE
static const uint16_t m_a8d787cae7e0b243[] = {0, 1};
const ::capnp::_::RawSchema s_a8d787cae7e0b243 = {
  0xa8d787cae7e0b243, b_a8d787cae7e0b243.words, 27, nullptr, m_a8d787cae7e0b243,
  0, 2, nullptr, nullptr, nullptr, { &s_a8d787cae7e0b243, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CloseSemantics_a8d787cae7e0b243, a8d787cae7e0b243);
static const ::capnp::_::AlignedData<62> b_d5b512f4bcd0aa2e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     18,   0,   0,   0,   1,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  77, 115, 103,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  77, 115, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5b512f4bcd0aa2e = b_d5b512f4bcd0aa2e.words;
#if !CAPNP_LITE
static const uint16_t m_d5b512f4bcd0aa2e[] = {1, 2, 0};
static const uint16_t i_d5b512f4bcd0aa2e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d5b512f4bcd0aa2e = {
  0xd5b512f4bcd0aa2e, b_d5b512f4bcd0aa2e.words, 62, nullptr, m_d5b512f4bcd0aa2e,
  0, 3, i_d5b512f4bcd0aa2e, nullptr, nullptr, { &s_d5b512f4bcd0aa2e, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<186> b_e3d7a3237f175028 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40,  80,  23, 127,  35, 163, 215, 227,
     18,   0,   0,   0,   1,   0,   2,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  83, 116,  97, 114, 116, 117,
    112,  73, 110, 102, 111,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   1,   0,   0,   3,   0,   1,   0,
     48,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
    100,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   1,   0,   0,   3,   0,   1,   0,
    180,   1,   0,   0,   2,   0,   1,   0,
     98, 117, 102, 102, 101, 114,  83, 105,
    122, 101,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 111, 115, 101,  83, 101, 109,
     97, 110, 116, 105,  99, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108,  83,
     82,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 101, 114,  83,  82,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 114,  83,  82,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3d7a3237f175028 = b_e3d7a3237f175028.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3d7a3237f175028[] = {
  &s_8bc69192f3bc97cc,
  &s_9c62c32b2ff2b1e8,
  &s_a8d787cae7e0b243,
  &s_f7fec613b4a8c79f,
};
static const uint16_t m_e3d7a3237f175028[] = {0, 5, 2, 1, 3, 6, 4, 7};
static const uint16_t i_e3d7a3237f175028[] = {0, 1, 2, 3, 4, 5, 6, 7};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_e3d7a3237f175028[] = {
  { 16777221,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::_capnpPrivate::brand() },
  { 16777222,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::_capnpPrivate::brand() },
  { 16777223,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_e3d7a3237f175028 = {
  0xe3d7a3237f175028, b_e3d7a3237f175028.words, 186, d_e3d7a3237f175028, m_e3d7a3237f175028,
  4, 8, i_e3d7a3237f175028, nullptr, nullptr, { &s_e3d7a3237f175028, nullptr, bd_e3d7a3237f175028, 0, sizeof(bd_e3d7a3237f175028) / sizeof(bd_e3d7a3237f175028[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_8bc69192f3bc97cc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
     18,   0,   0,   0,   3,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
     69,   0,   0,   0, 199,   0,   0,   0,
     57,   1,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    206, 145, 241, 254, 121, 167, 100, 242,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  90,   0,   0,   0,
     67, 104,  97, 110,  82, 101,  97, 100,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,  43, 139, 219, 153,  93,  51, 192,
     46, 170, 208, 188, 244,  18, 181, 213,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    200,  65, 140, 241, 100, 234,  40, 148,
     26, 130,  83, 191, 161,   8, 254, 179,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
    108,   0,   0,   0,   0,   0,   1,   0,
    125,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     68,  64, 204, 159, 169,  33, 229, 137,
     46, 170, 208, 188, 244,  18, 181, 213,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   0,   0,   1,   0,
    128,   0,   0,   0,   0,   0,   1,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
    114, 101,  97, 100,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101,  97, 100,  73, 102,  77, 115,
    103,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 203,  54, 220, 160, 218, 167, 193,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8bc69192f3bc97cc = b_8bc69192f3bc97cc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8bc69192f3bc97cc[] = {
  &s_89e521a99fcc4044,
  &s_9428ea64f18c41c8,
  &s_b2afd1cb599c48d5,
  &s_b3fe08a1bf53821a,
  &s_c0335d99db8b2ba5,
  &s_c1a7daa0dc36cb65,
  &s_d5b512f4bcd0aa2e,
};
static const uint16_t m_8bc69192f3bc97cc[] = {1, 0, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8bc69192f3bc97cc[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::ReadParams::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::CloseParams::_capnpPrivate::brand() },
  { 33554434,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::ReadIfMsgParams::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::CloseResults::_capnpPrivate::brand() },
  { 50331650,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8bc69192f3bc97cc = {
  0x8bc69192f3bc97cc, b_8bc69192f3bc97cc.words, 94, d_8bc69192f3bc97cc, m_8bc69192f3bc97cc,
  7, 3, nullptr, nullptr, nullptr, { &s_8bc69192f3bc97cc, nullptr, bd_8bc69192f3bc97cc, 0, sizeof(bd_8bc69192f3bc97cc) / sizeof(bd_8bc69192f3bc97cc[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c0335d99db8b2ba5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165,  43, 139, 219, 153,  93,  51, 192,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46, 114, 101,  97, 100,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0335d99db8b2ba5 = b_c0335d99db8b2ba5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0335d99db8b2ba5 = {
  0xc0335d99db8b2ba5, b_c0335d99db8b2ba5.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0335d99db8b2ba5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_9428ea64f18c41c8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200,  65, 140, 241, 100, 234,  40, 148,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_9428ea64f18c41c8 = b_9428ea64f18c41c8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9428ea64f18c41c8 = {
  0x9428ea64f18c41c8, b_9428ea64f18c41c8.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9428ea64f18c41c8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b3fe08a1bf53821a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     26, 130,  83, 191, 161,   8, 254, 179,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_b3fe08a1bf53821a = b_b3fe08a1bf53821a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b3fe08a1bf53821a = {
  0xb3fe08a1bf53821a, b_b3fe08a1bf53821a.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b3fe08a1bf53821a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_89e521a99fcc4044 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68,  64, 204, 159, 169,  33, 229, 137,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46, 114, 101,  97, 100,  73, 102,  77,
    115, 103,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_89e521a99fcc4044 = b_89e521a99fcc4044.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_89e521a99fcc4044 = {
  0x89e521a99fcc4044, b_89e521a99fcc4044.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_89e521a99fcc4044, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_f7fec613b4a8c79f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
     18,   0,   0,   0,   3,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
     69,   0,   0,   0, 199,   0,   0,   0,
     57,   1,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    206, 145, 241, 254, 121, 167, 100, 242,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  90,   0,   0,   0,
     67, 104,  97, 110,  87, 114, 105, 116,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     36, 149,  20, 236, 184,  36, 159, 206,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     80,  30,  61, 218, 141, 152, 220, 186,
    201,  88, 142, 225, 145, 220,   2, 203,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
    108,   0,   0,   0,   0,   0,   1,   0,
    125,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
    129,   2, 209, 137, 143,  67,  28, 198,
    113,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   0,   0,   1,   0,
    128,   0,   0,   0,   0,   0,   1,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
    119, 114, 105, 116, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    119, 114, 105, 116, 101,  73, 102,  83,
    112,  97,  99, 101,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 203,  54, 220, 160, 218, 167, 193,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f7fec613b4a8c79f = b_f7fec613b4a8c79f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f7fec613b4a8c79f[] = {
  &s_b2afd1cb599c48d5,
  &s_badc988dda3d1e50,
  &s_c1a7daa0dc36cb65,
  &s_c61c438f89d10281,
  &s_cb02dc91e18e58c9,
  &s_ce9f24b8ec149524,
  &s_d5b512f4bcd0aa2e,
};
static const uint16_t m_f7fec613b4a8c79f[] = {1, 0, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f7fec613b4a8c79f[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::CloseParams::_capnpPrivate::brand() },
  { 33554434,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::WriteResults::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::CloseResults::_capnpPrivate::brand() },
  { 50331650,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::WriteIfSpaceResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f7fec613b4a8c79f = {
  0xf7fec613b4a8c79f, b_f7fec613b4a8c79f.words, 94, d_f7fec613b4a8c79f, m_f7fec613b4a8c79f,
  7, 3, nullptr, nullptr, nullptr, { &s_f7fec613b4a8c79f, nullptr, bd_f7fec613b4a8c79f, 0, sizeof(bd_f7fec613b4a8c79f) / sizeof(bd_f7fec613b4a8c79f[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_ce9f24b8ec149524 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 149,  20, 236, 184,  36, 159, 206,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46, 119, 114, 105, 116, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_ce9f24b8ec149524 = b_ce9f24b8ec149524.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ce9f24b8ec149524 = {
  0xce9f24b8ec149524, b_ce9f24b8ec149524.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ce9f24b8ec149524, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_badc988dda3d1e50 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     80,  30,  61, 218, 141, 152, 220, 186,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_badc988dda3d1e50 = b_badc988dda3d1e50.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_badc988dda3d1e50 = {
  0xbadc988dda3d1e50, b_badc988dda3d1e50.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_badc988dda3d1e50, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cb02dc91e18e58c9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  88, 142, 225, 145, 220,   2, 203,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_cb02dc91e18e58c9 = b_cb02dc91e18e58c9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cb02dc91e18e58c9 = {
  0xcb02dc91e18e58c9, b_cb02dc91e18e58c9.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cb02dc91e18e58c9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c61c438f89d10281 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129,   2, 209, 137, 143,  67,  28, 198,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46, 119, 114, 105, 116, 101,  73, 102,
     83, 112,  97,  99, 101,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 117,  99,  99, 101, 115, 115,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c61c438f89d10281 = b_c61c438f89d10281.words;
#if !CAPNP_LITE
static const uint16_t m_c61c438f89d10281[] = {0};
static const uint16_t i_c61c438f89d10281[] = {0};
const ::capnp::_::RawSchema s_c61c438f89d10281 = {
  0xc61c438f89d10281, b_c61c438f89d10281.words, 34, nullptr, m_c61c438f89d10281,
  0, 1, i_c61c438f89d10281, nullptr, nullptr, { &s_c61c438f89d10281, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_92101e3b7a761333 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51,  19, 118, 122,  59,  30,  16, 146,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  66, 117, 102,
    102, 101, 114,  83, 105, 122, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92101e3b7a761333 = b_92101e3b7a761333.words;
#if !CAPNP_LITE
static const uint16_t m_92101e3b7a761333[] = {0};
static const uint16_t i_92101e3b7a761333[] = {0};
const ::capnp::_::RawSchema s_92101e3b7a761333 = {
  0x92101e3b7a761333, b_92101e3b7a761333.words, 33, nullptr, m_92101e3b7a761333,
  0, 1, i_92101e3b7a761333, nullptr, nullptr, { &s_92101e3b7a761333, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_fe6a08d5e0712c23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  44, 113, 224, 213,   8, 106, 254,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  66, 117, 102,
    102, 101, 114,  83, 105, 122, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_fe6a08d5e0712c23 = b_fe6a08d5e0712c23.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fe6a08d5e0712c23 = {
  0xfe6a08d5e0712c23, b_fe6a08d5e0712c23.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fe6a08d5e0712c23, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_e607c9dd64da04c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196,   4, 218, 100, 221, 201,   7, 230,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 114, 101,  97, 100, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_e607c9dd64da04c4 = b_e607c9dd64da04c4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e607c9dd64da04c4 = {
  0xe607c9dd64da04c4, b_e607c9dd64da04c4.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e607c9dd64da04c4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_b135ffc9ccc9eca6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    166, 236, 201, 204, 201, 255,  53, 177,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 114, 101,  97, 100, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b135ffc9ccc9eca6 = b_b135ffc9ccc9eca6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b135ffc9ccc9eca6[] = {
  &s_8bc69192f3bc97cc,
};
static const uint16_t m_b135ffc9ccc9eca6[] = {0};
static const uint16_t i_b135ffc9ccc9eca6[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b135ffc9ccc9eca6[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b135ffc9ccc9eca6 = {
  0xb135ffc9ccc9eca6, b_b135ffc9ccc9eca6.words, 38, d_b135ffc9ccc9eca6, m_b135ffc9ccc9eca6,
  1, 1, i_b135ffc9ccc9eca6, nullptr, nullptr, { &s_b135ffc9ccc9eca6, nullptr, bd_b135ffc9ccc9eca6, 0, sizeof(bd_b135ffc9ccc9eca6) / sizeof(bd_b135ffc9ccc9eca6[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_be611d34e368e109 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 225, 104, 227,  52,  29,  97, 190,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 119, 114, 105, 116, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_be611d34e368e109 = b_be611d34e368e109.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_be611d34e368e109 = {
  0xbe611d34e368e109, b_be611d34e368e109.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_be611d34e368e109, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_b47b53679e985c7e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126,  92, 152, 158, 103,  83, 123, 180,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 119, 114, 105, 116, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    119,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b47b53679e985c7e = b_b47b53679e985c7e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b47b53679e985c7e[] = {
  &s_f7fec613b4a8c79f,
};
static const uint16_t m_b47b53679e985c7e[] = {0};
static const uint16_t i_b47b53679e985c7e[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b47b53679e985c7e[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b47b53679e985c7e = {
  0xb47b53679e985c7e, b_b47b53679e985c7e.words, 38, d_b47b53679e985c7e, m_b47b53679e985c7e,
  1, 1, i_b47b53679e985c7e, nullptr, nullptr, { &s_b47b53679e985c7e, nullptr, bd_b47b53679e985c7e, 0, sizeof(bd_b47b53679e985c7e) / sizeof(bd_b47b53679e985c7e[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_d23f817e914373d8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216, 115,  67, 145, 126, 129,  63, 210,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 101, 110, 100, 112, 111, 105,
    110, 116, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d23f817e914373d8 = b_d23f817e914373d8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d23f817e914373d8 = {
  0xd23f817e914373d8, b_d23f817e914373d8.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d23f817e914373d8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_f37401d21f8d97bb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 151, 141,  31, 210,   1, 116, 243,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 101, 110, 100, 112, 111, 105,
    110, 116, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f37401d21f8d97bb = b_f37401d21f8d97bb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f37401d21f8d97bb[] = {
  &s_8bc69192f3bc97cc,
  &s_f7fec613b4a8c79f,
};
static const uint16_t m_f37401d21f8d97bb[] = {0, 1};
static const uint16_t i_f37401d21f8d97bb[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f37401d21f8d97bb[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::_capnpPrivate::brand() },
  { 16777217,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f37401d21f8d97bb = {
  0xf37401d21f8d97bb, b_f37401d21f8d97bb.words, 58, d_f37401d21f8d97bb, m_f37401d21f8d97bb,
  2, 2, i_f37401d21f8d97bb, nullptr, nullptr, { &s_f37401d21f8d97bb, nullptr, bd_f37401d21f8d97bb, 0, sizeof(bd_f37401d21f8d97bb) / sizeof(bd_f37401d21f8d97bb[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_b49836b545583add = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221,  58,  88,  69, 181,  54, 152, 180,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  65, 117, 116,
    111,  67, 108, 111, 115, 101,  83, 101,
    109,  97, 110, 116, 105,  99, 115,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99, 115,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b49836b545583add = b_b49836b545583add.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b49836b545583add[] = {
  &s_a8d787cae7e0b243,
};
static const uint16_t m_b49836b545583add[] = {0};
static const uint16_t i_b49836b545583add[] = {0};
const ::capnp::_::RawSchema s_b49836b545583add = {
  0xb49836b545583add, b_b49836b545583add.words, 39, d_b49836b545583add, m_b49836b545583add,
  1, 1, i_b49836b545583add, nullptr, nullptr, { &s_b49836b545583add, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_c0fc6e5a3fcb3206 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6,  50, 203,  63,  90, 110, 252, 192,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  65, 117, 116,
    111,  67, 108, 111, 115, 101,  83, 101,
    109,  97, 110, 116, 105,  99, 115,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_c0fc6e5a3fcb3206 = b_c0fc6e5a3fcb3206.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0fc6e5a3fcb3206 = {
  0xc0fc6e5a3fcb3206, b_c0fc6e5a3fcb3206.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0fc6e5a3fcb3206, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_95d8ad01c1113d9c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156,  61,  17, 193,   1, 173, 216, 149,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  99, 108, 111, 115, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    119,  97, 105, 116,  70, 111, 114,  69,
    109, 112, 116, 121,  66, 117, 102, 102,
    101, 114,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_95d8ad01c1113d9c = b_95d8ad01c1113d9c.words;
#if !CAPNP_LITE
static const uint16_t m_95d8ad01c1113d9c[] = {0};
static const uint16_t i_95d8ad01c1113d9c[] = {0};
const ::capnp::_::RawSchema s_95d8ad01c1113d9c = {
  0x95d8ad01c1113d9c, b_95d8ad01c1113d9c.words, 34, nullptr, m_95d8ad01c1113d9c,
  0, 1, i_95d8ad01c1113d9c, nullptr, nullptr, { &s_95d8ad01c1113d9c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_cc079ad60f1363b7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    183,  99,  19,  15, 214, 154,   7, 204,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  99, 108, 111, 115, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_cc079ad60f1363b7 = b_cc079ad60f1363b7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cc079ad60f1363b7 = {
  0xcc079ad60f1363b7, b_cc079ad60f1363b7.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cc079ad60f1363b7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d0cd6d829b810229 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41,   2, 129, 155, 130, 109, 205, 208,
     10,   0,   0,   0,   3,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
     81,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  83, 116,  97, 114, 116,  67,
    104,  97, 110, 110, 101, 108, 115,  83,
    101, 114, 118, 105,  99, 101,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    162, 251,  88, 141, 169, 185, 118, 149,
      1,   0,   0,   0,  58,   0,   0,   0,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    162, 251,  88, 141, 169, 185, 118, 149,
     12, 177, 226,  61, 200, 117,  89, 222,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   7,   0,   0,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0cd6d829b810229 = b_d0cd6d829b810229.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0cd6d829b810229[] = {
  &s_9576b9a98d58fba2,
  &s_b2afd1cb599c48d5,
  &s_de5975c83de2b10c,
};
static const uint16_t m_d0cd6d829b810229[] = {0};
const ::capnp::_::RawSchema s_d0cd6d829b810229 = {
  0xd0cd6d829b810229, b_d0cd6d829b810229.words, 34, d_d0cd6d829b810229, m_d0cd6d829b810229,
  3, 1, nullptr, nullptr, nullptr, { &s_d0cd6d829b810229, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<138> b_9576b9a98d58fba2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162, 251,  88, 141, 169, 185, 118, 149,
     31,   0,   0,   0,   1,   0,   1,   0,
     41,   2, 129, 155, 130, 109, 205, 208,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  83, 116,  97, 114, 116,  67,
    104,  97, 110, 110, 101, 108, 115,  83,
    101, 114, 118, 105,  99, 101,  46,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  79, 102,  67, 104,  97, 110,
    110, 101, 108, 115,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  79, 102,  82, 101,  97, 100,
    101, 114, 115,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  79, 102,  87, 114, 105, 116,
    101, 114, 115,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 101, 114,  83, 114,
    116, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 114,  83, 114,
    116, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 102, 102, 101, 114,  83, 105,
    122, 101,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9576b9a98d58fba2 = b_9576b9a98d58fba2.words;
#if !CAPNP_LITE
static const uint16_t m_9576b9a98d58fba2[] = {6, 0, 1, 2, 3, 4, 5};
static const uint16_t i_9576b9a98d58fba2[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_9576b9a98d58fba2 = {
  0x9576b9a98d58fba2, b_9576b9a98d58fba2.words, 138, nullptr, m_9576b9a98d58fba2,
  0, 7, i_9576b9a98d58fba2, nullptr, nullptr, { &s_9576b9a98d58fba2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_de5975c83de2b10c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 177, 226,  61, 200, 117,  89, 222,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  83, 116,  97, 114, 116,  67,
    104,  97, 110, 110, 101, 108, 115,  83,
    101, 114, 118, 105,  99, 101,  46, 115,
    116,  97, 114, 116,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116, 117, 112,  73,
    110, 102, 111, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     40,  80,  23, 127,  35, 163, 215, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 112,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    118, 146,  46,  35,  88, 100,  95, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de5975c83de2b10c = b_de5975c83de2b10c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_de5975c83de2b10c[] = {
  &s_cd5f6458232e9276,
  &s_e3d7a3237f175028,
};
static const uint16_t m_de5975c83de2b10c[] = {0, 1};
static const uint16_t i_de5975c83de2b10c[] = {0, 1};
const ::capnp::_::RawSchema s_de5975c83de2b10c = {
  0xde5975c83de2b10c, b_de5975c83de2b10c.words, 54, d_de5975c83de2b10c, m_de5975c83de2b10c,
  2, 2, i_de5975c83de2b10c, nullptr, nullptr, { &s_de5975c83de2b10c, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_ece0efa9a922d4a8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    168, 212,  34, 169, 169, 239, 224, 236,
     10,   0,   0,   0,   1,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  80, 111, 114, 116,  73, 110,
    102, 111, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     69,  21, 235, 181, 196,  52,  77, 138,
      1,   0,   0,   0,  82,   0,   0,   0,
     78,  97, 109, 101,  65, 110, 100,  83,
     82,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  80, 111, 114, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69,  21, 235, 181, 196,  52,  77, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116,  80, 111, 114, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69,  21, 235, 181, 196,  52,  77, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ece0efa9a922d4a8 = b_ece0efa9a922d4a8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ece0efa9a922d4a8[] = {
  &s_8a4d34c4b5eb1545,
};
static const uint16_t m_ece0efa9a922d4a8[] = {0, 1};
static const uint16_t i_ece0efa9a922d4a8[] = {0, 1};
const ::capnp::_::RawSchema s_ece0efa9a922d4a8 = {
  0xece0efa9a922d4a8, b_ece0efa9a922d4a8.words, 60, d_ece0efa9a922d4a8, m_ece0efa9a922d4a8,
  1, 2, i_ece0efa9a922d4a8, nullptr, nullptr, { &s_ece0efa9a922d4a8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_8a4d34c4b5eb1545 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  21, 235, 181, 196,  52,  77, 138,
     20,   0,   0,   0,   1,   0,   1,   0,
    168, 212,  34, 169, 169, 239, 224, 236,
      2,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  80, 111, 114, 116,  73, 110,
    102, 111, 115,  46,  78,  97, 109, 101,
     65, 110, 100,  83,  82,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a4d34c4b5eb1545 = b_8a4d34c4b5eb1545.words;
#if !CAPNP_LITE
static const uint16_t m_8a4d34c4b5eb1545[] = {0, 1, 2};
static const uint16_t i_8a4d34c4b5eb1545[] = {1, 2, 0};
const ::capnp::_::RawSchema s_8a4d34c4b5eb1545 = {
  0x8a4d34c4b5eb1545, b_8a4d34c4b5eb1545.words, 67, nullptr, m_8a4d34c4b5eb1545,
  0, 3, i_8a4d34c4b5eb1545, nullptr, nullptr, { &s_8a4d34c4b5eb1545, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_d717ff7d6815a6b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
     10,   0,   0,   0,   1,   0,   1,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
     15, 199,  57,  45, 143, 102,  23, 203,
     17,   0,   0,   0,  74,   0,   0,   0,
     80, 180,  70,  82, 199, 106, 151, 198,
     17,   0,   0,   0, 114,   0,   0,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
     17,   0,   0,   0,  42,   0,   0,   0,
     82, 117, 110, 110,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 112, 111, 110, 101, 110,
    116,  84, 121, 112, 101,   0,   0,   0,
     80, 111, 114, 116,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 218,   3, 254, 203, 126, 203, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     80, 180,  70,  82, 199, 106, 151, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  80, 111, 114, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116,  80, 111, 114, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 117, 110,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     15, 199,  57,  45, 143, 102,  23, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d717ff7d6815a6b0 = b_d717ff7d6815a6b0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d717ff7d6815a6b0[] = {
  &s_c28d2829add1cd72,
  &s_c6976ac75246b450,
  &s_cb17668f2d39c70f,
  &s_d4cb7ecbfe03dad3,
};
static const uint16_t m_d717ff7d6815a6b0[] = {2, 0, 3, 4, 1};
static const uint16_t i_d717ff7d6815a6b0[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d717ff7d6815a6b0 = {
  0xd717ff7d6815a6b0, b_d717ff7d6815a6b0.words, 112, d_d717ff7d6815a6b0, m_d717ff7d6815a6b0,
  4, 5, i_d717ff7d6815a6b0, nullptr, nullptr, { &s_d717ff7d6815a6b0, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<41> b_cb17668f2d39c70f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 199,  57,  45, 143, 102,  23, 203,
     20,   0,   0,   0,   3,   0,   0,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    109,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  82, 117, 110, 110,
     97,  98, 108, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     50,   5,  84, 178,   8,  95, 183, 222,
    156, 165,  82, 150,  53, 218,  24, 187,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    238, 145, 124,  36,  58,   8, 186, 230,
    126, 225, 126, 168, 155,  15, 240, 203,
     25,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   7,   0,   0,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 116, 111, 112,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb17668f2d39c70f = b_cb17668f2d39c70f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cb17668f2d39c70f[] = {
  &s_b2afd1cb599c48d5,
  &s_bb18da359652a59c,
  &s_cbf00f9ba87ee17e,
  &s_deb75f08b2540532,
  &s_e6ba083a247c91ee,
};
static const uint16_t m_cb17668f2d39c70f[] = {0, 1};
const ::capnp::_::RawSchema s_cb17668f2d39c70f = {
  0xcb17668f2d39c70f, b_cb17668f2d39c70f.words, 41, d_cb17668f2d39c70f, m_cb17668f2d39c70f,
  5, 2, nullptr, nullptr, nullptr, { &s_cb17668f2d39c70f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_deb75f08b2540532 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50,   5,  84, 178,   8,  95, 183, 222,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  82, 117, 110, 110,
     97,  98, 108, 101,  46, 115, 116,  97,
    114, 116,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 114, 116,  73, 110, 102, 111,
    115,  82, 101,  97, 100, 101, 114,  83,
    114,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_deb75f08b2540532 = b_deb75f08b2540532.words;
#if !CAPNP_LITE
static const uint16_t m_deb75f08b2540532[] = {1, 0};
static const uint16_t i_deb75f08b2540532[] = {0, 1};
const ::capnp::_::RawSchema s_deb75f08b2540532 = {
  0xdeb75f08b2540532, b_deb75f08b2540532.words, 51, nullptr, m_deb75f08b2540532,
  0, 2, i_deb75f08b2540532, nullptr, nullptr, { &s_deb75f08b2540532, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bb18da359652a59c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156, 165,  82, 150,  53, 218,  24, 187,
     29,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  82, 117, 110, 110,
     97,  98, 108, 101,  46, 115, 116,  97,
    114, 116,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 117,  99,  99, 101, 115, 115,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bb18da359652a59c = b_bb18da359652a59c.words;
#if !CAPNP_LITE
static const uint16_t m_bb18da359652a59c[] = {0};
static const uint16_t i_bb18da359652a59c[] = {0};
const ::capnp::_::RawSchema s_bb18da359652a59c = {
  0xbb18da359652a59c, b_bb18da359652a59c.words, 34, nullptr, m_bb18da359652a59c,
  0, 1, i_bb18da359652a59c, nullptr, nullptr, { &s_bb18da359652a59c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_e6ba083a247c91ee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238, 145, 124,  36,  58,   8, 186, 230,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  82, 117, 110, 110,
     97,  98, 108, 101,  46, 115, 116, 111,
    112,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e6ba083a247c91ee = b_e6ba083a247c91ee.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e6ba083a247c91ee = {
  0xe6ba083a247c91ee, b_e6ba083a247c91ee.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e6ba083a247c91ee, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_cbf00f9ba87ee17e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126, 225, 126, 168, 155,  15, 240, 203,
     29,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  82, 117, 110, 110,
     97,  98, 108, 101,  46, 115, 116, 111,
    112,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 117,  99,  99, 101, 115, 115,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbf00f9ba87ee17e = b_cbf00f9ba87ee17e.words;
#if !CAPNP_LITE
static const uint16_t m_cbf00f9ba87ee17e[] = {0};
static const uint16_t i_cbf00f9ba87ee17e[] = {0};
const ::capnp::_::RawSchema s_cbf00f9ba87ee17e = {
  0xcbf00f9ba87ee17e, b_cbf00f9ba87ee17e.words, 34, nullptr, m_cbf00f9ba87ee17e,
  0, 1, i_cbf00f9ba87ee17e, nullptr, nullptr, { &s_cbf00f9ba87ee17e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_c6976ac75246b450 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     80, 180,  70,  82, 199, 106, 151, 198,
     20,   0,   0,   0,   2,   0,   0,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  67, 111, 109, 112,
    111, 110, 101, 110, 116,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 110, 100,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 105, 112,   0,   0,   0,   0,   0,
    115, 117,  98, 102, 108, 111, 119,   0, }
};
::capnp::word const* const bp_c6976ac75246b450 = b_c6976ac75246b450.words;
#if !CAPNP_LITE
static const uint16_t m_c6976ac75246b450[] = {1, 0, 2};
const ::capnp::_::RawSchema s_c6976ac75246b450 = {
  0xc6976ac75246b450, b_c6976ac75246b450.words, 32, nullptr, m_c6976ac75246b450,
  0, 3, nullptr, nullptr, nullptr, { &s_c6976ac75246b450, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ComponentType_c6976ac75246b450, c6976ac75246b450);
static const ::capnp::_::AlignedData<72> b_c28d2829add1cd72 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
     20,   0,   0,   0,   1,   0,   1,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  80, 111, 114, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     36,  98, 160,  24, 115, 122, 141, 245,
      9,   0,   0,   0,  74,   0,   0,   0,
     47,  74, 217,  14, 207,  16,   6, 243,
      9,   0,   0,   0,  98,   0,   0,   0,
     80, 111, 114, 116,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 110, 116, 101, 110, 116,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     36,  98, 160,  24, 115, 122, 141, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c28d2829add1cd72 = b_c28d2829add1cd72.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c28d2829add1cd72[] = {
  &s_f58d7a7318a06224,
};
static const uint16_t m_c28d2829add1cd72[] = {1, 0, 2};
static const uint16_t i_c28d2829add1cd72[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c28d2829add1cd72 = {
  0xc28d2829add1cd72, b_c28d2829add1cd72.words, 72, d_c28d2829add1cd72, m_c28d2829add1cd72,
  1, 3, i_c28d2829add1cd72, nullptr, nullptr, { &s_c28d2829add1cd72, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<24> b_f58d7a7318a06224 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36,  98, 160,  24, 115, 122, 141, 245,
     25,   0,   0,   0,   2,   0,   0,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  80, 111, 114, 116,
     46,  80, 111, 114, 116,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 110, 100,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f58d7a7318a06224 = b_f58d7a7318a06224.words;
#if !CAPNP_LITE
static const uint16_t m_f58d7a7318a06224[] = {0};
const ::capnp::_::RawSchema s_f58d7a7318a06224 = {
  0xf58d7a7318a06224, b_f58d7a7318a06224.words, 24, nullptr, m_f58d7a7318a06224,
  0, 1, nullptr, nullptr, nullptr, { &s_f58d7a7318a06224, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PortType_f58d7a7318a06224, f58d7a7318a06224);
static const ::capnp::_::AlignedData<24> b_f30610cf0ed94a2f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47,  74, 217,  14, 207,  16,   6, 243,
     25,   0,   0,   0,   2,   0,   0,   0,
    114, 205, 209, 173,  41,  40, 141, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  46,  80, 111, 114, 116,
     46,  67, 111, 110, 116, 101, 110, 116,
     84, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 117,  99, 116, 117, 114,
    101, 100,  84, 101, 120, 116,   0,   0, }
};
::capnp::word const* const bp_f30610cf0ed94a2f = b_f30610cf0ed94a2f.words;
#if !CAPNP_LITE
static const uint16_t m_f30610cf0ed94a2f[] = {0};
const ::capnp::_::RawSchema s_f30610cf0ed94a2f = {
  0xf30610cf0ed94a2f, b_f30610cf0ed94a2f.words, 24, nullptr, m_f30610cf0ed94a2f,
  0, 1, nullptr, nullptr, nullptr, { &s_f30610cf0ed94a2f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ContentType_f30610cf0ed94a2f, f30610cf0ed94a2f);
static const ::capnp::_::AlignedData<56> b_fd32766446625ad7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215,  90,  98,  70, 100, 118,  50, 253,
     10,   0,   0,   0,   3,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 199,   0,   0,   0,
    169,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     24,  87,  22,  17,  55, 196, 163, 237,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     56, 104, 101, 218,  13, 243, 229, 143,
    197, 216,   7, 104,  57, 153, 147, 169,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      6, 225, 119, 182, 235,  91,  60, 151,
     85, 208, 207, 152, 133,  58, 111, 129,
     57,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    174, 147, 226, 239, 184,  81,  41, 221,
    132, 110, 226,  10, 247,  91,  49, 180,
     37,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99,  97, 116, 101, 103, 111, 114, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fd32766446625ad7 = b_fd32766446625ad7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fd32766446625ad7[] = {
  &s_816f3a8598cfd055,
  &s_8fe5f30dda656838,
  &s_973c5bebb677e106,
  &s_a99399396807d8c5,
  &s_b2afd1cb599c48d5,
  &s_b4315bf70ae26e84,
  &s_dd2951b8efe293ae,
};
static const uint16_t m_fd32766446625ad7[] = {2, 1, 0};
const ::capnp::_::RawSchema s_fd32766446625ad7 = {
  0xfd32766446625ad7, b_fd32766446625ad7.words, 56, d_fd32766446625ad7, m_fd32766446625ad7,
  7, 3, nullptr, nullptr, nullptr, { &s_fd32766446625ad7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_eda3c43711165718 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24,  87,  22,  17,  55, 196, 163, 237,
     27,   0,   0,   0,   1,   0,   0,   0,
    215,  90,  98,  70, 100, 118,  50, 253,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46,  69, 110, 116, 114, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 116, 101, 103, 111, 114, 121,
     73, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eda3c43711165718 = b_eda3c43711165718.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eda3c43711165718[] = {
  &s_d717ff7d6815a6b0,
};
static const uint16_t m_eda3c43711165718[] = {0, 1};
static const uint16_t i_eda3c43711165718[] = {0, 1};
const ::capnp::_::RawSchema s_eda3c43711165718 = {
  0xeda3c43711165718, b_eda3c43711165718.words, 51, d_eda3c43711165718, m_eda3c43711165718,
  1, 2, i_eda3c43711165718, nullptr, nullptr, { &s_eda3c43711165718, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_8fe5f30dda656838 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56, 104, 101, 218,  13, 243, 229, 143,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46, 108, 105, 115, 116,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_8fe5f30dda656838 = b_8fe5f30dda656838.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_8fe5f30dda656838 = {
  0x8fe5f30dda656838, b_8fe5f30dda656838.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_8fe5f30dda656838, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_a99399396807d8c5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197, 216,   7, 104,  57, 153, 147, 169,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46, 108, 105, 115, 116,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     24,  87,  22,  17,  55, 196, 163, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a99399396807d8c5 = b_a99399396807d8c5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a99399396807d8c5[] = {
  &s_eda3c43711165718,
};
static const uint16_t m_a99399396807d8c5[] = {0};
static const uint16_t i_a99399396807d8c5[] = {0};
const ::capnp::_::RawSchema s_a99399396807d8c5 = {
  0xa99399396807d8c5, b_a99399396807d8c5.words, 37, d_a99399396807d8c5, m_a99399396807d8c5,
  1, 1, i_a99399396807d8c5, nullptr, nullptr, { &s_a99399396807d8c5, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_973c5bebb677e106 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6, 225, 119, 182, 235,  91,  60, 151,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46,  99, 111, 109, 112, 111,
    110, 101, 110, 116,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_973c5bebb677e106 = b_973c5bebb677e106.words;
#if !CAPNP_LITE
static const uint16_t m_973c5bebb677e106[] = {0};
static const uint16_t i_973c5bebb677e106[] = {0};
const ::capnp::_::RawSchema s_973c5bebb677e106 = {
  0x973c5bebb677e106, b_973c5bebb677e106.words, 34, nullptr, m_973c5bebb677e106,
  0, 1, i_973c5bebb677e106, nullptr, nullptr, { &s_973c5bebb677e106, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_816f3a8598cfd055 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 208, 207, 152, 133,  58, 111, 129,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46,  99, 111, 109, 112, 111,
    110, 101, 110, 116,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 109, 112,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    176, 166,  21, 104, 125, 255,  23, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_816f3a8598cfd055 = b_816f3a8598cfd055.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_816f3a8598cfd055[] = {
  &s_d717ff7d6815a6b0,
};
static const uint16_t m_816f3a8598cfd055[] = {0};
static const uint16_t i_816f3a8598cfd055[] = {0};
const ::capnp::_::RawSchema s_816f3a8598cfd055 = {
  0x816f3a8598cfd055, b_816f3a8598cfd055.words, 34, d_816f3a8598cfd055, m_816f3a8598cfd055,
  1, 1, i_816f3a8598cfd055, nullptr, nullptr, { &s_816f3a8598cfd055, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_dd2951b8efe293ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 147, 226, 239, 184,  81,  41, 221,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46,  99,  97, 116, 101, 103,
    111, 114, 105, 101, 115,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dd2951b8efe293ae = b_dd2951b8efe293ae.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_dd2951b8efe293ae = {
  0xdd2951b8efe293ae, b_dd2951b8efe293ae.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_dd2951b8efe293ae, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_b4315bf70ae26e84 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132, 110, 226,  10, 247,  91,  49, 180,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116,  83, 101, 114, 118, 105,
     99, 101,  46,  99,  97, 116, 101, 103,
    111, 114, 105, 101, 115,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 116, 101, 103, 111, 114, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 218,   3, 254, 203, 126, 203, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b4315bf70ae26e84 = b_b4315bf70ae26e84.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b4315bf70ae26e84[] = {
  &s_d4cb7ecbfe03dad3,
};
static const uint16_t m_b4315bf70ae26e84[] = {0};
static const uint16_t i_b4315bf70ae26e84[] = {0};
const ::capnp::_::RawSchema s_b4315bf70ae26e84 = {
  0xb4315bf70ae26e84, b_b4315bf70ae26e84.words, 39, d_b4315bf70ae26e84, m_b4315bf70ae26e84,
  1, 1, i_b4315bf70ae26e84, nullptr, nullptr, { &s_b4315bf70ae26e84, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace fbp {

// IP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t IP::_capnpPrivate::dataWordSize;
constexpr uint16_t IP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind IP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// IP::KV
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t IP::KV::_capnpPrivate::dataWordSize;
constexpr uint16_t IP::KV::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind IP::KV::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IP::KV::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// IIP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t IIP::_capnpPrivate::dataWordSize;
constexpr uint16_t IIP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind IIP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IIP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::fbp::StartChannelsService::Params,  ::mas::schema::fbp::StartChannelsService::StartResults>
StartChannelsService::Client::startRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::StartChannelsService::Params,  ::mas::schema::fbp::StartChannelsService::StartResults>(
      0xd0cd6d829b810229ull, 0, sizeHint, {false});
}
::kj::Promise<void> StartChannelsService::Server::start(StartContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:StartChannelsService", "start",
      0xd0cd6d829b810229ull, 0);
}
::capnp::Capability::Server::DispatchCallResult StartChannelsService::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xd0cd6d829b810229ull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("fbp.capnp:StartChannelsService", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult StartChannelsService::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        start(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::StartChannelsService::Params,  ::mas::schema::fbp::StartChannelsService::StartResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "fbp.capnp:StartChannelsService",
          0xd0cd6d829b810229ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// StartChannelsService
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind StartChannelsService::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StartChannelsService::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// StartChannelsService::Params
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t StartChannelsService::Params::_capnpPrivate::dataWordSize;
constexpr uint16_t StartChannelsService::Params::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind StartChannelsService::Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StartChannelsService::Params::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// StartChannelsService::StartResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t StartChannelsService::StartResults::_capnpPrivate::dataWordSize;
constexpr uint16_t StartChannelsService::StartResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind StartChannelsService::StartResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StartChannelsService::StartResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PortInfos
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PortInfos::_capnpPrivate::dataWordSize;
constexpr uint16_t PortInfos::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PortInfos::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PortInfos::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PortInfos::NameAndSR
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PortInfos::NameAndSR::_capnpPrivate::dataWordSize;
constexpr uint16_t PortInfos::NameAndSR::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PortInfos::NameAndSR::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PortInfos::NameAndSR::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::fbp::Component::Runnable::StartParams,  ::mas::schema::fbp::Component::Runnable::StartResults>
Component::Runnable::Client::startRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::Component::Runnable::StartParams,  ::mas::schema::fbp::Component::Runnable::StartResults>(
      0xcb17668f2d39c70full, 0, sizeHint, {true});
}
::kj::Promise<void> Component::Runnable::Server::start(StartContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:Component.Runnable", "start",
      0xcb17668f2d39c70full, 0);
}
::capnp::Request< ::mas::schema::fbp::Component::Runnable::StopParams,  ::mas::schema::fbp::Component::Runnable::StopResults>
Component::Runnable::Client::stopRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::Component::Runnable::StopParams,  ::mas::schema::fbp::Component::Runnable::StopResults>(
      0xcb17668f2d39c70full, 1, sizeHint, {true});
}
::kj::Promise<void> Component::Runnable::Server::stop(StopContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:Component.Runnable", "stop",
      0xcb17668f2d39c70full, 1);
}
::capnp::Capability::Server::DispatchCallResult Component::Runnable::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xcb17668f2d39c70full:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("fbp.capnp:Component.Runnable", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Component::Runnable::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        start(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::Component::Runnable::StartParams,  ::mas::schema::fbp::Component::Runnable::StartResults>(context)),
        false,
        false
      };
    case 1:
      return {
        stop(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::Component::Runnable::StopParams,  ::mas::schema::fbp::Component::Runnable::StopResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "fbp.capnp:Component.Runnable",
          0xcb17668f2d39c70full, methodId);
  }
}
#endif  // !CAPNP_LITE

// Component::Runnable
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Runnable::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Runnable::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component::Runnable::StartParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::Runnable::StartParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::Runnable::StartParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Runnable::StartParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Runnable::StartParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component::Runnable::StartResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::Runnable::StartResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::Runnable::StartResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Runnable::StartResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Runnable::StartResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component::Runnable::StopParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::Runnable::StopParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::Runnable::StopParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Runnable::StopParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Runnable::StopParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component::Runnable::StopResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::Runnable::StopResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::Runnable::StopResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Runnable::StopResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Runnable::StopResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Component::Port
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Component::Port::_capnpPrivate::dataWordSize;
constexpr uint16_t Component::Port::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Component::Port::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Component::Port::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::fbp::ComponentService::ListParams,  ::mas::schema::fbp::ComponentService::ListResults>
ComponentService::Client::listRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::ComponentService::ListParams,  ::mas::schema::fbp::ComponentService::ListResults>(
      0xfd32766446625ad7ull, 0, sizeHint, {false});
}
::kj::Promise<void> ComponentService::Server::list(ListContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:ComponentService", "list",
      0xfd32766446625ad7ull, 0);
}
::capnp::Request< ::mas::schema::fbp::ComponentService::ComponentParams,  ::mas::schema::fbp::ComponentService::ComponentResults>
ComponentService::Client::componentRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::ComponentService::ComponentParams,  ::mas::schema::fbp::ComponentService::ComponentResults>(
      0xfd32766446625ad7ull, 1, sizeHint, {false});
}
::kj::Promise<void> ComponentService::Server::component(ComponentContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:ComponentService", "component",
      0xfd32766446625ad7ull, 1);
}
::capnp::Request< ::mas::schema::fbp::ComponentService::CategoriesParams,  ::mas::schema::fbp::ComponentService::CategoriesResults>
ComponentService::Client::categoriesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::fbp::ComponentService::CategoriesParams,  ::mas::schema::fbp::ComponentService::CategoriesResults>(
      0xfd32766446625ad7ull, 2, sizeHint, {true});
}
::kj::Promise<void> ComponentService::Server::categories(CategoriesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "fbp.capnp:ComponentService", "categories",
      0xfd32766446625ad7ull, 2);
}
::capnp::Capability::Server::DispatchCallResult ComponentService::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xfd32766446625ad7ull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("fbp.capnp:ComponentService", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult ComponentService::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        list(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::ComponentService::ListParams,  ::mas::schema::fbp::ComponentService::ListResults>(context)),
        false,
        false
      };
    case 1:
      return {
        component(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::ComponentService::ComponentParams,  ::mas::schema::fbp::ComponentService::ComponentResults>(context)),
        false,
        false
      };
    case 2:
      return {
        categories(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::fbp::ComponentService::CategoriesParams,  ::mas::schema::fbp::ComponentService::CategoriesResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "fbp.capnp:ComponentService",
          0xfd32766446625ad7ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// ComponentService
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::Entry
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::Entry::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::ListParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::ListParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::ListParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::ListParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::ListParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::ListResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::ListResults::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::ListResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::ListResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::ListResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::ComponentParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::ComponentParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::ComponentParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::ComponentParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::ComponentParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::ComponentResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::ComponentResults::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::ComponentResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::ComponentResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::ComponentResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::CategoriesParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::CategoriesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::CategoriesParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::CategoriesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::CategoriesParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ComponentService::CategoriesResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ComponentService::CategoriesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentService::CategoriesResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ComponentService::CategoriesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentService::CategoriesResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

